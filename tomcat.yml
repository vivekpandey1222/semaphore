---
- name: Deploy Tomcat container with JMX and WAR
  hosts: localhost
  vars:
    ansible_python_interpreter: /usr/bin/python3
    tomcat_image: "docker.io/library/tomcat:latest"
    tomcat_container_name: "tomcat"
    tomcat_ports:
      - "8075:8080"
    tomcat_status_filter: "name=tomcat"
    jmx_jar_url: "https://repo1.maven.org/maven2/io/prometheus/jmx/jmx_prometheus_javaagent/0.16.1/jmx_prometheus_javaagent-0.16.1.jar"
    jmx_jar_path: "/tmp/jmx/jmx_prometheus_javaagent-0.16.1.jar"
    tomcat_war_source: "/tmp/SampleWebApp.war"
    tomcat_war_dest: "/usr/local/tomcat/webapps/SampleWebApp.war"

  tasks:
    - name: Pull the Tomcat container image
      containers.podman.podman_image:
        name: "{{ tomcat_image }}"
        tag: latest

    - name: Create JMX directory
      become: yes
      file:
        path: /tmp/jmx
        state: directory
        mode: '0755'
    - name: Ensure JMX directory is writable
      become: yes
      file:
        path: /tmp/jmx
        mode: '0777'

    - name: Download JMX Prometheus Javaagent
      #become: yes
      get_url:
        url: "{{ jmx_jar_url }}"
        dest: "{{ jmx_jar_path }}"

    - name: Run Tomcat container
      containers.podman.podman_container:
        name: "{{ tomcat_container_name }}"
        image: "{{ tomcat_image }}"
        state: started
        ports: "{{ tomcat_ports }}"
        volume:
          - "/tmp/jmx:/opt/jmx"
          - "{{ tomcat_war_source }}:{{ tomcat_war_dest }}"

    - name: Wait for Tomcat to start
      wait_for:
        host: localhost
        port: 8075
        delay: 10
        timeout: 120

    - name: Verify Tomcat container is running
      command: podman ps --filter "{{ tomcat_status_filter }}" --format "{{'{{.Status}}'}}"
      register: container_status

    - name: Debug container status
      debug:
        var: container_status.stdout

    - name: Print Tomcat container logs for debugging
      command: podman logs {{ tomcat_container_name }}
      register: tomcat_logs
      ignore_errors: yes

    - name: Debug Tomcat logs
      debug:
        var: tomcat_logs.stdout
